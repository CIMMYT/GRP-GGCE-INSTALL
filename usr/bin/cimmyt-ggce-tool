#!/bin/bash

source /usr/lib/cimmyt-ggce-tool/environment.sh
source /usr/lib/cimmyt-ggce-tool/deployment.sh
source /usr/lib/cimmyt-ggce-tool/ui.sh


CONFIG_DIR="/etc/cimmyt-ggce-tool"
TEMPLATE_DIR="/usr/share/cimmyt-ggce-tool"

print_version() {
  local package_name program_name version

  # Default values for development or when not installed via a .deb package
  program_name="CIMMYT - GGCE tool (dev)"
  version="unknown"

  if command -v dpkg &> /dev/null; then
    # dpkg -S returns <package>:<path>
    package_name=$(dpkg -S "$0" 2>/dev/null | cut -d: -f1)

    if [ -n "$package_name" ]; then
      # Get Program Name from Description and Version from dpkg status
      # The 'Description' field in the debian/control file should contain the program name.
      program_name=$(dpkg -s "$package_name" | grep '^Description:' | sed 's/^Description: //')
      version=$(dpkg -s "$package_name" | grep '^Version:' | awk '{print $2}')
    fi
  fi
  ui::echo-message "CIMMYT's Germplasm Bank"
  ui::echo-message "$program_name"
  ui::echo-message "Version: $version"

}

confirm_clean_install () {
    # Check if target .env file already exists
    if [ -f "$target_file" ]; then
        ui::echo-message "Ya existe una instalacion de ggce en este equipo." "warning"
        ui::echo-message "Antes de continuar, respalde su informacion." "warning"
        ui::echo-message "Al aceptar, se borrará la instalación anterior y se realizará una nueva." "warning"
        read -p 'Si desea continuar, teclee "CONTINUAR" para continuar: ' confirmation
        if [ "$confirmation" == "CONTINUAR" ]; then
            ui::echo-message "Confirmación aceptada. Eliminando la configuración anterior..." "warning"
            if ! rm -f "$target_file"; then
                ui::echo-message "No se pudo eliminar '$target_file'. Verifique los permisos." "error"
                return 1
            fi
        else
            ui::echo-message "Instalación cancelada por el usuario." "error"
            return 1
        fi
    fi
    return 0
}

run_install() {
    local source_file="$TEMPLATE_DIR/env.example"
    local target_file="$CONFIG_DIR/config.env"

    if [ "$(id -u)" -ne 0 ]; then
        ui::echo-message "Esta instalacion necesita de los privilegios de root." "error"
        exit 1
    fi

    if ! environment::port_validation; then
        ui::echo-message "Se deben liberar los puerto 3001, 3002, 1400 - para desplegar la aplicacion GGCE." "error"
        exit 1
    fi

    if ! confirm_clean_install; then
        exit 1
    fi
    
    if [ ! -f "$source_file" ]; then
        ui::echo-message "El archivo de plantilla '$source_file' no fue localizado." "error"
        exit 1
    fi

    ui::echo-message "Iniciando con la configuracion interactiva..."
    if ! touch "$target_file"; then
        ui::echo-message "No se pudo crear el archivo de configuracion '$target_file'." "error"
        exit 1
    fi
    ui::echo-message "El archivo de configuracion '$target_file' fue creado." "success"
    ui::echo-message "Presione enter para aceptar los valores por default que aparecene entre corchetes[]."
    if ! environment::prepare_env_file; then
        ui::echo-message "Al crear el archivo de configuracion." "error"
        exit 1
    fi
    ui::echo-message "La configuarcion fue creada con exito." "success"

    if ! deployment::list_remote_version; then
      ui::echo-message "No se pudo acceder a las nuevas versiones." "error"
      exit 1
    fi
    if ! environment::select_version; then
      ui::echo-message "Imposible actualizar las nuevas versiones." "error"
      exit 1
    fi

    if ! deployment::prepare_resources; then
        ui::echo-message "No fue posible desplegar los servicios." "error"
        exit 1
    fi
    ui::echo-message "Contenedores, volumnes e imagenes fueron implementados correctamente." "success"
}

print_usage() {
    ui::echo-message "Uso: $0 <comando> [opciones]" "help"
    echo 
    ui::echo-message "Herramienta de CIMMYT para la gestión de la aplicación Grin Global Community Edition (GGCE)." "help"
    echo 
    ui::echo-message "Comandos:" "help"
    ui::echo-message "  -i, --install              Ejecuta la instalación y el despliegue interactivo." "help"
    ui::echo-message "  -u, --update               Busca y aplica actualizaciones a los componentes de GGCE (API/UI)." "help"
    ui::echo-message "  -s, --server <acción>      Gestiona los contenedores del servidor." "help"
    ui::echo-message "                             Acciones para GGCE (API/UI): --start, --stop, --restart" "help"
    ui::echo-message "                             Acciones para todos los servicios (incluye DB): --start-all, --stop-all" "help"
    ui::echo-message "  -v, --version              Muestra la información de la versión." "help"
    echo 
    ui::echo-message "Ejemplos:" "help"
    ui::echo-message "  $0 --install" "help"
    ui::echo-message "  $0 --update" "help"
    ui::echo-message "  $0 --server --start" "help"
    ui::echo-message "  $0 --server --stop-all" "help"
}

run_update(){
  if ! deployment::stop_only_ggce; then
    ui::echo-message "Los servicios no se pueden detener." "error"
    exit 1
  fi 
  if ! deployment::list_remote_version; then
    ui::echo-message "No se pudo acceder a las nuevas versiones" "error"
    exit 1
  fi
  if ! environment::select_version; then
    ui::echo-message "Imposible actualizar las nuevas versiones." "error"
    exit 1
  fi
  if ! deployment::start_only_ggce; then
    ui::echo-message "Los servicios no pudieron iniciar." "error"
    exit 1
  fi
}


case "$1" in
  -v|--version)
    print_version
    ;;
  -i|--install)
    run_install
    ;;
  -u|--update)
    run_update
    ;;
  -s|--server)
    case "$2" in
      --start)
        deployment::start_only_ggce
        ;;
      --stop)
        deployment::stop_only_ggce
        ;;
      --restart)
        deployment::stop_only_ggce
        deployment::start_only_ggce
        ;;
      --start-all)
        deployment::start_resources
        ;;
      --stop-all)
        deployment::stop_resources
        ;;
      *)
        ui::echo-message "Acción inválida para '$1'. Use --start, --stop, o --restart.." "warning"
        print_usage
        exit 1
        ;;
    esac
    ;;
  *)
    print_usage
    exit 1
    ;;
esac

exit 0